% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph.R
\name{tc_build_graph}
\alias{tc_build_graph}
\alias{tc_raster}
\alias{tc_adj_matrix}
\title{Build the graph that underlies travel cost calculations on a grid}
\usage{
tc_build_graph(x, directed = TRUE, neighbours = 8, wrap_x = FALSE)

tc_raster(x)

tc_adj_matrix(x)
}
\arguments{
\item{x}{Raster: a raster layer defining the extent, projection, and resolution of the grid}

\item{directed}{logical: if \code{TRUE}, the graph is directed (meaning that the cost of travel from cell x to cell y is not necessarily the same as the cost of travel from cell y to cell x)}

\item{neighbours}{integer: either 4 (each cell is connected to its cardinal neighbours) or 8 (each cell is connected to all 8 neighbouring cells)}

\item{wrap_x}{logical: if \code{TRUE}, the graph is wrapped in the x direction (appropriate if the grid represents the full 360 longitude span of the globe)}
}
\value{
An object of class \code{tc_graph}
}
\description{
\code{\link[=tc_raster]{tc_raster()}} is a helper function that returns the raster template used to construct the graph. \code{\link[=tc_adj_matrix]{tc_adj_matrix()}} is a helper function that returns the adjacency matrix that underlies the graph.
}
\examples{
my_raster <- raster::raster(ext = raster::extent(c(152.75, 155.25, -56.25, -54.25)),
                            res = c(0.5, 0.5), crs = "+proj=longlat")
g <- tc_build_graph(my_raster)

}
\seealso{
\code{\link[=tc_set_edge_weights]{tc_set_edge_weights()}}, \code{\link[=tc_combine_edge_weights]{tc_combine_edge_weights()}}
}
