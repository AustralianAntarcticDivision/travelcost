% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/graph.R
\name{tc_set_edge_weights}
\alias{tc_set_edge_weights}
\title{Set the edge weights of a travelcost graph}
\usage{
tc_set_edge_weights(x, fun, values)
}
\arguments{
\item{x}{tc_graph: an object of class \code{tc_graph}, as returned by \code{\link[=tc_build_graph]{tc_build_graph()}}}

\item{fun}{function or string: a function or name of function. \code{fun} should accept two arguments, each an N x 2 matrix. The first gives the xy-coordinates of starting points, and the second gives the xy-coordinates of ending points. \code{fun} should return the weight (travel cost) between points. Only one of \code{fun} or \code{values} is required}

\item{values}{numeric: A vector of edge weights. The length of \code{values} must be the same as the number of non-zero elements of the adjacency matrix. Ignored if \code{fun} is provided}
}
\value{
A \code{tc_graph} object with the edge weights set
}
\description{
Set the edge weights of a travelcost graph
}
\examples{
\dontrun{
  my_raster <- raster::raster(ext = raster::extent(c(152.75, 155.25, -56.25, -54.25)),
                              res = c(0.5, 0.5), crs = "+proj=longlat")
  g <- tc_build_graph(my_raster)
  ## set weights according to great-circle distance
  g <- tc_set_edge_weights(g, fun = geosphere::distHaversine)
}
}
\seealso{
\code{\link[=tc_build_graph]{tc_build_graph()}}, \code{\link[=tc_combine_edge_weights]{tc_combine_edge_weights()}}
}
